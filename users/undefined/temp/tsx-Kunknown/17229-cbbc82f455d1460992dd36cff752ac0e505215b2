{"code":"(()=>{\n\"use strict\";var __create=Object.create;var __defProp=Object.defineProperty;var __getOwnPropDesc=Object.getOwnPropertyDescriptor;var __getOwnPropNames=Object.getOwnPropertyNames;var __getProtoOf=Object.getPrototypeOf;var __hasOwnProp=Object.prototype.hasOwnProperty;var __copyProps=(to,from,except,desc)=>{if(from&&typeof from===\"object\"||typeof from===\"function\"){for(let key of __getOwnPropNames(from))if(!__hasOwnProp.call(to,key)&&key!==except)__defProp(to,key,{get:()=>from[key],enumerable:!(desc=__getOwnPropDesc(from,key))||desc.enumerable})}return to};var __toESM=(mod,isNodeMode,target)=>(target=mod!=null?__create(__getProtoOf(mod)):{},__copyProps(isNodeMode||!mod||!mod.__esModule?__defProp(target,\"default\",{value:mod,enumerable:true}):target,mod));var import_client_dynamodb=require(\"@aws-sdk/client-dynamodb\");var import_lib_dynamodb=require(\"@aws-sdk/lib-dynamodb\");var import_express=__toESM(require(\"express\"));var import_serverless_http=__toESM(require(\"serverless-http\"));const app=(0,import_express.default)();const USERS_TABLE=process.env.USERS_TABLE;const client=new import_client_dynamodb.DynamoDBClient;const docClient=import_lib_dynamodb.DynamoDBDocumentClient.from(client);app.use(import_express.default.json());app.get(\"/hello\",async(req,res)=>{res.status(200).json(\"hello world!\")});app.get(\"/users/:userId\",async(req,res)=>{const params={TableName:USERS_TABLE,Key:{userId:req.params.userId}};try{const command=new import_lib_dynamodb.GetCommand(params);const{Item}=await docClient.send(command);if(Item){const{userId,name}=Item;res.json({userId,name})}else{res.status(404).json({error:'Could not find user with provided \"userId\"'})}}catch(error){console.log(error);res.status(500).json({error:\"Could not retrieve user\"})}});app.post(\"/users\",async(req,res)=>{const{userId,name}=req.body;if(typeof userId!==\"string\"){res.status(400).json({error:'\"userId\" must be a string'})}else if(typeof name!==\"string\"){res.status(400).json({error:'\"name\" must be a string'})}const params={TableName:USERS_TABLE,Item:{userId,name}};try{const command=new import_lib_dynamodb.PutCommand(params);await docClient.send(command);res.json({userId,name})}catch(error){console.error(error);res.status(500).json({error:\"Could not create user\"})}});app.put(\"/users/:userId\",async(req,res)=>{const{userId,name}=req.body});app.delete(\"/users/:userId\",async(req,res)=>{});app.use((req,res)=>{return res.status(404).json({error:\"Not Found\"})});exports.handler=(0,import_serverless_http.default)(app);\n})()\n","warnings":[],"map":{"version":3,"mappings":";yvBAAA,2BAA+B,oCAE/B,wBAIO,iCAEP,mBAAoB,4BACpB,2BAAuB,oCAEvB,MAAM,OAAM,eAAAA,SAAQ,EAEpB,MAAM,YAAc,QAAQ,IAAI,YAChC,MAAM,OAAS,IAAI,sCACnB,MAAM,UAAY,2CAAuB,KAAK,MAAM,EAEpD,IAAI,IAAI,eAAAA,QAAQ,KAAK,CAAC,EAEtB,IAAI,IAAI,SAAU,MAAM,IAAI,MAAQ,CAClC,IAAI,OAAO,GAAG,EAAE,KAAK,cAAc,CACrC,CAAC,EAED,IAAI,IAAI,iBAAkB,MAAO,IAAK,MAAQ,CAC5C,MAAM,OAAS,CACb,UAAW,YACX,IAAK,CACH,OAAQ,IAAI,OAAO,MACrB,CACF,EAEA,GAAI,CACF,MAAM,QAAU,IAAI,+BAAW,MAAM,EACrC,KAAM,CAAE,IAAK,EAAI,MAAM,UAAU,KAAK,OAAO,EAC7C,GAAI,KAAM,CACR,KAAM,CAAE,OAAQ,IAAK,EAAI,KACzB,IAAI,KAAK,CAAE,OAAQ,IAAK,CAAC,CAC3B,KAAO,CACL,IACG,OAAO,GAAG,EACV,KAAK,CAAE,MAAO,4CAA6C,CAAC,CACjE,CACF,OAAS,MAAO,CACd,QAAQ,IAAI,KAAK,EACjB,IAAI,OAAO,GAAG,EAAE,KAAK,CAAE,MAAO,yBAA0B,CAAC,CAC3D,CACF,CAAC,EAED,IAAI,KAAK,SAAU,MAAO,IAAK,MAAQ,CACrC,KAAM,CAAE,OAAQ,IAAK,EAAI,IAAI,KAC7B,GAAI,OAAO,SAAW,SAAU,CAC9B,IAAI,OAAO,GAAG,EAAE,KAAK,CAAE,MAAO,2BAA4B,CAAC,CAC7D,SAAW,OAAO,OAAS,SAAU,CACnC,IAAI,OAAO,GAAG,EAAE,KAAK,CAAE,MAAO,yBAA0B,CAAC,CAC3D,CAEA,MAAM,OAAS,CACb,UAAW,YACX,KAAM,CAAE,OAAQ,IAAK,CACvB,EAEA,GAAI,CACF,MAAM,QAAU,IAAI,+BAAW,MAAM,EACrC,MAAM,UAAU,KAAK,OAAO,EAC5B,IAAI,KAAK,CAAE,OAAQ,IAAK,CAAC,CAC3B,OAAS,MAAO,CACd,QAAQ,MAAM,KAAK,EACnB,IAAI,OAAO,GAAG,EAAE,KAAK,CAAE,MAAO,uBAAwB,CAAC,CACzD,CACF,CAAC,EAED,IAAI,IAAI,iBAAkB,MAAO,IAAK,MAAQ,CAC5C,KAAM,CAAC,OAAQ,IAAI,EAAI,IAAI,IAC7B,CAAC,EAED,IAAI,OAAO,iBAAkB,MAAO,IAAK,MAAQ,CAEjD,CAAC,EAED,IAAI,IAAI,CAAC,IAAK,MAAQ,CACpB,OAAO,IAAI,OAAO,GAAG,EAAE,KAAK,CAC1B,MAAO,WACT,CAAC,CACH,CAAC,EAED,QAAQ,WAAU,uBAAAC,SAAW,GAAG","names":["express","serverless"],"ignoreList":[],"sources":["F:\\2024 Projects\\serverless-user-service\\users\\handler.ts"],"sourcesContent":[null]}}